Metadata-Version: 2.1
Name: pvrhino
Version: 1.0.0
Summary: On-device speech-to-text engine powered by deep learning.
Home-page: https://github.com/Picovoice/rhino
Author: Picovoice
Author-email: hello@picovoice.ai
License: UNKNOWN
Description: 
            #[Rhino](https://github.com/Picovoice/rhino).   
            It supports Linux (x86_64), Mac, Raspberry Pi (Zero, 1, 2, 3), and BeagleBone.
            ## Installation
            ```bash
            pip install pvrhino
            ```
            If it fails to install PyAudio, you can do the following for Debian/Ubuntu as referenced in the installation guide
            of [PyAudio](https://people.csail.mit.edu/hubert/pyaudio/). 
            Install PyAudio  
            ```bash
            sudo apt-get install python-pyaudio python3-pyaudio
            ```
            If the above fails then first run the following
            ```bash
            sudo apt-get install portaudio19-dev
            sudo apt-get install python-all-dev python3-all-dev
            ```
            ## Usage
            ### Realtime Demo
            Make sure you have a working microphone connected to your device first. From commandline type the following
            ```bash
            pvrhino_mic
            ```
            Then start with "Hey Pico" and order coffee. The demo infers intent from spoken commands in the context of a coffee maker 
            and initializes the Porcupine engine to detect the wake phrase _Hey Pico_. When the wake phrase is detected, 
            Rhino starts processing the followup spoken command and prints out the inferred intent and slot values to the console.
            
            In order to get more information about using demos, run them with '--help' argument or look into their GitHub page
            [here](https://github.com/Picovoice/rhino/tree/master/demo/python).
            ### Rhino Class
            
            You can create an instance of Rhino engine for use within your application using the factory method provided below.
            ```python
            import pvrhino
            pvrhino.create(context_file_path=...)
            ```
            If the `context_file_path` is not provided, the default context is the coffee maker.
            
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown
