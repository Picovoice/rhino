plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

ext {
    PUBLISH_GROUP_ID = 'ai.picovoice'
    PUBLISH_VERSION = '2.1.6'
    PUBLISH_ARTIFACT_ID = 'rhino-java'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDirs = ['src']
        }
    }
    test {
        java {
            srcDirs = ['test']
        }
    }
}

javadoc.options.addStringOption('Xdoclint:none', '-quiet')

def outputDir = "$buildDir/classes/java/main"

task copyDefaultModel(type: Copy) {
    from('../../lib/common/rhino_params.pv') into "${outputDir}/rhino/lib/common/"
}
task copyLinuxLib(type: Copy) {
    from('../../lib/java/linux/x86_64/libpv_rhino_jni.so') into "${outputDir}/rhino/lib/java/linux/x86_64/"
}
task copyMacLib(type: Copy) {
    from('../../lib/java/mac/')
    include('x86_64/libpv_rhino_jni.dylib',
            'arm64/libpv_rhino_jni.dylib')
    into "${outputDir}/rhino/lib/java/mac/"
}
task copyWindowsLib(type: Copy) {
    from('../../lib/java/windows/amd64/pv_rhino_jni.dll') into "${outputDir}/rhino/lib/java/windows/amd64/"
}
task copyRPiLib(type: Copy) {
    from('../../lib/java/raspberry-pi/')
    include('cortex-a7/libpv_rhino_jni.so',
            'cortex-a53/libpv_rhino_jni.so',
            'cortex-a53-aarch64/libpv_rhino_jni.so',
            'cortex-a72/libpv_rhino_jni.so',
            'cortex-a72-aarch64/libpv_rhino_jni.so')
    into("${outputDir}/rhino/lib/java/raspberry-pi/")
}
task copyJetsonLib(type: Copy) {
    from('../../lib/java/jetson/cortex-a57-aarch64/libpv_rhino_jni.so') into "${outputDir}/rhino/lib/java/jetson/cortex-a57-aarch64/"
}
task copyBeagleboneLib(type: Copy) {
    from('../../lib/java/beaglebone/libpv_rhino_jni.so') into "${outputDir}/rhino/lib/java/beaglebone/"
}

task copyTasks(type: GradleBuild) {
    tasks = ['copyDefaultModel',
             'copyLinuxLib',
             'copyMacLib',
             'copyWindowsLib',
             'copyRPiLib',
             'copyJetsonLib',
             'copyBeagleboneLib']
}

jar {
    dependsOn 'copyTasks'
}

javadoc {
    dependsOn 'copyTasks'
}

if (file("${rootDir}/publish-mavencentral.gradle").exists()) {
    apply from: "${rootDir}/publish-mavencentral.gradle"
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.4.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'
}

compileTestJava {
    dependsOn 'assemble'
}

test {
    systemProperty 'pvTestingAccessKey', System.getProperty('pvTestingAccessKey')
    systemProperty 'numTestIterations', System.getProperty('numTestIterations')
    systemProperty 'performanceThresholdSec', System.getProperty('performanceThresholdSec')
    useJUnitPlatform()
}

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"
