name: C Demos

on:
  workflow_dispatch:
  push:
    branches: [ master, c-actions ]
    paths:
      - 'demo/c/**'
      - '!demo/c/README.md'
  pull_request:
    branches: [ master, c-actions ]
    paths:
      - 'demo/c/**'
      - '!demo/c/README.md'


defaults:
  run:
    working-directory: demo/c

jobs:
  build-micdemo-github-hosted:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Create build directory
      run: cmake -B ./build

    - name: Build micdemo
      run: cmake --build ./build --target rhino_demo_mic
  
  build-micdemo-self-hosted:
    runs-on: ${{ matrix.machine }}

    strategy:
      matrix:
        machine: [rpi2, rpi3, rpi4, jetson, beaglebone]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Create build directory
      run: cmake -B ./build

    - name: Build micdemo
      run: cmake --build ./build --target rhino_demo_mic

  build-filedemo-github-hosted:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        lang: [en, de, es, fr]
        include:
        - os: ubuntu-latest
          platform: linux
          arch: x86_64
          ext: so
        - os: windows-latest
          platform: windows
          arch: amd64
          ext: dll
        - os: macos-latest
          platform: mac
          arch: x86_64
          ext: dylib
        - lang: en
          lang-ext: ''
          context_file: coffee_maker
        - lang: de
          lang-ext: _de
          context_file: beleuchtung
        - lang: es
          lang-ext: _es
          context_file: luz
        - lang: fr
          lang-ext: _fr
          context_file: éclairage_intelligent

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Create build directory
      run: cmake -B ./build

    - name: Build filedemo
      run: cmake --build ./build --target rhino_demo_file

    - name: Run filedemo out of context
      run: >
        ./build/rhino_demo_file
        -a ${{secrets.PV_VALID_ACCESS_KEY}}
        -l ../../lib/${{ matrix.platform }}/${{ matrix.arch }}/libpv_rhino.${{ matrix.ext }}
        -m ../../lib/common/rhino_params${{ matrix.lang-ext }}.pv
        -c ../../resources/contexts${{ matrix.lang-ext }}/${{ matrix.platform }}/${{ matrix.keyword_file }}_${{ matrix.platform }}.rhn
        -t 0.5
        -w ../../resources/audio_samples/test_out_of_context${{ matrix.lang-ext }}.wav

    - name: Run filedemo within
      run: >
        ./build/rhino_demo_file
        -a ${{secrets.PV_VALID_ACCESS_KEY}}
        -l ../../lib/${{ matrix.platform }}/${{ matrix.arch }}/libpv_rhino.${{ matrix.ext }}
        -m ../../lib/common/rhino_params${{ matrix.lang-ext }}.pv
        -c ../../resources/contexts${{ matrix.lang-ext }}/${{ matrix.platform }}/${{ matrix.keyword_file }}_${{ matrix.platform }}.rhn
        -t 0.5
        -w ../../resources/audio_samples/test_within_context${{ matrix.lang-ext }}.wav
  
  build-filedemo-self-hosted:
    runs-on: ${{ matrix.machine }}

    strategy:
      matrix:
        machine: [rpi2, rpi3, rpi4, jetson, beaglebone]
        lang: [en, de, es, fr]
        include:
        - machine: rpi2
          platform: raspberry-pi
          arch: cortex-a7
        - machine: rpi3
          platform: raspberry-pi
          arch: cortex-a53
        - machine: rpi4
          platform: raspberry-pi
          arch: cortex-a72
        - machine: jetson
          platform: jetson
          arch: cortex-a57-aarch64
        - machine: beaglebone
          platform: beaglebone
          arch: ''
        - lang: en
          lang-ext: ''
          context_file: coffee_maker
        - lang: de
          lang-ext: _de
          context_file: beleuchtung
        - lang: es
          lang-ext: _es
          context_file: luz
        - lang: fr
          lang-ext: _fr
          context_file: éclairage_intelligent

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Create build directory
      run: cmake -B ./build

    - name: Build filedemo
      run: cmake --build ./build --target rhino_demo_file

    - name: Run filedemo out of context
      run: >
        ./build/rhino_demo_file
        -a ${{secrets.PV_VALID_ACCESS_KEY}}
        -l ../../lib/${{ matrix.platform }}/${{ matrix.arch }}/libpv_rhino.so
        -m ../../lib/common/rhino_params${{ matrix.lang-ext }}.pv
        -c ../../resources/contexts${{ matrix.lang-ext }}/${{ matrix.platform }}/${{ matrix.keyword_file }}_${{ matrix.platform }}.rhn
        -t 0.5
        -w ../../resources/audio_samples/test_out_of_context${{ matrix.lang-ext }}.wav

    - name: Run filedemo within context
      run: >
        ./build/rhino_demo_file
        -a ${{secrets.PV_VALID_ACCESS_KEY}}
        -l ../../lib/${{ matrix.platform }}/${{ matrix.arch }}/libpv_rhino.so
        -m ../../lib/common/rhino_params${{ matrix.lang-ext }}.pv
        -c ../../resources/contexts${{ matrix.lang-ext }}/${{ matrix.platform }}/${{ matrix.keyword_file }}_${{ matrix.platform }}.rhn
        -t 0.5
        -w ../../resources/audio_samples/test_within_context${{ matrix.lang-ext }}.wav
